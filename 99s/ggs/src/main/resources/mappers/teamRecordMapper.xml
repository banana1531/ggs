<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="teamRecord">
	
	
	<!-- 내팀 경기 일정 및 경기 결과 가져오기 -->
	<select id="myteam" resultType="com.ggs.DTO.TeamRecordDTO">
		select * from		
		(
			(SELECT * 
			FROM teamRecord 
			WHERE (ateamname=#{teamName} OR bteamname=#{teamName}) and (DATEDIFF(gdate, DATE(NOW())) &lt; -1)  
			ORDER BY gdate desc
			LIMIT 3)
			union
			(SELECT * 
			FROM teamRecord 
			WHERE (ateamname=#{teamName} OR bteamname=#{teamName}) and (DATEDIFF(gdate, DATE(NOW())) &gt; -1)  
			ORDER BY gdate ASC 
			LIMIT 3)
		) as k
		order by gdate
	</select>

	<!-- 팀 경기 이력 가져오기 -->
	<select id="teamRecord" resultType="com.ggs.DTO.TeamRecordDTO">
	SELECT gno, gdate, gtime, team as ateamname, tscore as ascore, vteam as bteamname, vscore as bscore, stadium, totalcnt 
	FROM
		(
			SELECT * FROM 
			(
				SELECT gno, gdate, gtime, ateamname AS team, ascore AS tscore, bteamname AS vteam, bscore AS vscore, stadium 
				FROM teamRecord WHERE ateamname = #{ateamname}
				union
				SELECT gno, gdate, gtime, bteamname AS team, bscore AS tscore, ateamname AS vteam, ascore AS vscore,  stadium 
				FROM teamRecord 
				WHERE bteamname = #{ateamname}
			) AS t 
			WHERE tscore &gt; -1 AND DATEDIFF(gdate, date(NOW()))&lt;0 
			order by gdate desc LIMIT #{start}, 5
		) AS r,
			(
				SELECT COUNT(*) AS totalcnt 
				FROM teamRecord 
				WHERE (ateamname = #{ateamname} OR Bteamname=#{ateamname}) AND (ascore &gt; -1 AND DATEDIFF(gdate, date(NOW()))&lt;0)
			) AS c
	</select>
	
	<!-- 팀 실적 가져오기 -->
	<select id="teamScore" resultType="com.ggs.DTO.TeamInfoDTO">
	SELECT w.team AS teamName, win, score, lose, loss, draw, round((win)/(win+lose),2) rate
	FROM 
		(SELECT team, sum(cnt) lose, sum(score) loss FROM 
			(SELECT ateamname team, COUNT(ateamname) cnt, SUM(ascore) score 
			FROM teamRecord 
			WHERE ascore &lt; bscore GROUP BY ateamname
			union all
			SELECT bteamname team, COUNT(bteamname) cnt, SUM(bscore) score 
			FROM teamRecord 
			WHERE bscore &lt; ascore GROUP BY bteamname) AS ll
			GROUP BY team) AS l,
		(SELECT team, sum(cnt) win, sum(score) score FROM 
			(SELECT ateamname team, COUNT(ateamname) cnt, SUM(ascore) score 
			FROM teamRecord 
			WHERE ascore &gt; bscore GROUP BY ateamname
			union all
			SELECT bteamname team, COUNT(bteamname) cnt, SUM(bscore) score 
			FROM teamRecord 
			WHERE bscore &gt; ascore GROUP BY bteamname) AS ww
			GROUP BY team) AS w LEFT OUTER JOIN
		(SELECT team, sum(cnt) draw FROM 
			(SELECT ateamname team, COUNT(ateamname) cnt 
			FROM teamRecord 
			WHERE ascore = bscore AND ascore &gt; -1 AND DATEDIFF(gdate, date(NOW()))&lt;0 GROUP BY ateamname
			union all
			SELECT bteamname team, COUNT(bteamname) cnt 
			FROM teamRecord 
			WHERE bscore = ascore and ascore &gt; -1 AND DATEDIFF(gdate, date(NOW()))&lt;0 GROUP BY bteamname) AS dd
			GROUP BY team) AS d ON w.team=d.team
		WHERE w.team!='경기없음' AND w.team=l.team 
		GROUP BY teamName
		<if test="teamName != null">having teamName = #{teamName}</if>
		ORDER BY rate DESC;
	</select>
	
	<!-- 팀실적 가져오기, 분석정보 포함 -->
	<select id="teamscoreD" resultType="com.ggs.DTO.TeamInfoDTO">
	SELECT aa.teamname, avgScore, maxScore, avgLoss, maxLoss, zeroLoss, zeroScore, lose, loss, win, score, draw, round(win/(win+lose),3) rate FROM
		(SELECT ROUND(avg(score),2)  AS avgScore, MAX(score) maxScore, teamname FROM 
		(SELECT gno, ascore score, gdate, ateamname teamname FROM teamRecord WHERE (ascore&gt;bscore)
		union
		SELECT gno, bscore score, gdate, bteamname teamname FROM teamRecord WHERE (bscore&gt;ascore)) AS a GROUP BY teamname) AS aa,
		
		(SELECT ROUND(avg(score),2) avgLoss, MAX(score) maxLoss, teamname FROM 
		(SELECT gno, ascore score, gdate,ateamname teamname FROM teamRecord WHERE (ascore&lt;bscore)
		union
		SELECT gno, bscore score, gdate,bteamname teamname FROM teamRecord WHERE (bscore&lt;ascore)) AS b GROUP BY teamname) AS bb,
		
		(SELECT SUM(cnt) zeroLoss, teamname FROM 
		(SELECT COUNT(*) cnt,ateamname teamname  FROM teamRecord WHERE (ascore&gt;bscore AND bscore=0) GROUP BY ateamname
		UNION
		SELECT COUNT(*) cnt, bteamname teamname FROM teamRecord WHERE (bscore&gt;ascore AND ascore=0 ) GROUP BY bteamname  ) AS c GROUP BY teamname) AS cc,
		
		(SELECT d1.teamname, zeroScore FROM 
		(SELECT ateamname teamname FROM teamRecord GROUP BY ateamname) AS d1 LEFT join
		(SELECT SUM(cnt) zeroScore, teamname FROM
		(SELECT COUNT(*) cnt, ateamname teamname FROM teamRecord WHERE (ascore &lt; bscore AND ascore=0) GROUP BY ateamname
		UNION
		SELECT COUNT(*) cnt, bteamname teamname FROM teamRecord WHERE (bscore &lt; ascore AND bscore=0) GROUP BY bteamname) AS d GROUP BY teamname) AS d2
		ON d1.teamname=d2.teamname) AS dd,
		
		(SELECT COUNT(gno) lose, SUM(loss) loss, teamname FROM 
		(SELECT gno, ascore loss, ateamname teamname FROM teamRecord WHERE (ascore&lt;bscore)
		union
		SELECT gno, bscore loss, bteamname teamname FROM teamRecord WHERE (bscore&lt;ascore)) AS e GROUP BY teamname) AS ee,
		
		(SELECT COUNT(gno) win, SUM(score) score, teamname FROM
		(SELECT gno, ascore score, ateamname teamname  FROM teamRecord WHERE (ascore&gt;bscore )
		UNION
		SELECT gno, bscore score, bteamname teamname  FROM teamRecord WHERE (bscore&gt;ascore )) AS f GROUP BY teamname) AS ff,
		
		(SELECT c.teamname, draw FROM 
		(SELECT ateamname teamname FROM teamRecord GROUP BY ateamname) AS c LEFT JOIN 
		(SELECT COUNT(*) draw, g.teamname FROM 
		(SELECT gno, ateamname teamname FROM teamRecord WHERE (ascore=bscore AND ascore&gt;-1)AND DATEDIFF(gdate, date(NOW()))&lt;0
		UNION all
		SELECT gno, bteamname teamname FROM teamRecord WHERE (ascore=bscore AND ascore&gt;-1)AND DATEDIFF(gdate, date(NOW()))&lt;0) AS g GROUP BY teamname) AS kk
		ON c.teamname=kk.teamname) AS gg
		
		WHERE aa.teamname=bb.teamname AND
		aa.teamname=cc.teamname AND
		aa.teamname=dd.teamname AND
		aa.teamname=ee.teamname AND
		aa.teamname=ff.teamname AND
		aa.teamname=gg.teamname AND
		aa.teamname!='경기없음'
		GROUP BY aa.teamname
		<if test="teamName!=null">having aa.teamname=#{teamName}</if>
		order by rate desc
	</select>	
	
	<!-- 경기 기록 가져오기 -->
	<select id="schmatchList" resultType="com.ggs.DTO.TeamRecordDTO">
		SELECT gno, gdate, gtime, team as ateamname, tscore as ascore, vteam as bteamname, vscore as bscore, stadium, totalcnt 
		FROM
			(
				SELECT * FROM 
				(
					SELECT gno, gdate, gtime, ateamname AS team, ascore AS tscore, bteamname AS vteam, bscore AS vscore, stadium 
					FROM teamRecord WHERE ateamname = #{ateamname}
					union
					SELECT gno, gdate, gtime, bteamname AS team, bscore AS tscore, ateamname AS vteam, ascore AS vscore,  stadium 
					FROM teamRecord 
					WHERE bteamname = #{ateamname}
				) AS t 
				WHERE tscore &gt; -1 AND DATEDIFF(gdate, date(NOW()))&gt;-1 
				order by gdate LIMIT #{start}, 5
			) AS r,
				(
					SELECT COUNT(*) AS totalcnt 
					FROM teamRecord 
					WHERE (ateamname = #{ateamname} OR Bteamname=#{ateamname}) AND (ascore &gt; -1 AND DATEDIFF(gdate, date(NOW()))&lt;-1)
				) AS c
	</select>
	
	<!-- 경기 정보수정하기 -->
	<update id="gameUpdate" parameterType="com.ggs.DTO.TeamRecordDTO">
		update teamRecord set gtime=#{gtime},
		ateamname=#{ateamname},
		ascore=#{ascore},
		bscore=#{bscore},
		bteamname=#{bteamname},
		stadium=#{stadium}
		where gno=#{gno} 
	</update>
	
	<!-- 경기 기록 수정 -->
	<update id="updateTeamRecord" parameterType="com.ggs.DTO.TeamRecordDTO">
		update teamRecord set ascore=#{ascore}, bscore=#{bscore}
		where gdate=#{ggdate} and (ateamname=#{ateamname} and bteamname=#{bteamname})
	</update>
	
	<!-- 경기번호 가져오기 -->
	<select id="getGno" resultType="java.lang.String">
		SELECT gno FROM teamRecord WHERE  DATEDIFF(gdate, DATE(NOW()))=0;
	</select>
</mapper>

